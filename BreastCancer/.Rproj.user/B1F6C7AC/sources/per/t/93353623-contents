---
title: "DT"
author: "KWONHYUNJIN"
date: "2018년 9월 19일"
output: html_document
---

#tree: tree패키지
```{r setup, include=FALSE}
library(xlsx)
library(dplyr)
library(ggplot2)
library(caret)
library(class)
library(gmodels)
library(tree)
```

```{r}
bc <- read.xlsx("New_version_breast_cancer.xlsx",1)
head(bc)
```

#set.seed란 랜덤한 값을 시작하기 전에 사용하면 이후에도 같은 값으로 랜덤값을 갖는다.
#동일한 랜덤값을 계속해서 받기위해
#과연 필요할지에 대해 고찰 
```{r}
set.seed(123)
bc_shuffle <- bc[sample(nrow(bc)), ]
head(bc_shuffle)
```


#현재 bc 데이터 프레임에 id라는 컬럼이 필요없다.
#bc_shuffle에서 1번컬럼은 제외하고 나머지 컬럼을 bc2에 할당한다.
```{r}
bc2 <- bc_shuffle[-1]
head(bc2)
```

#데이터를 train 과 test 9:1로 나눈후 train 에 대한 tree 제작 .
```{r}
train_num<-round(0.9*nrow(bc2),0)
bc_train<-bc2[1:train_num,]
bc_test<-bc2[(train_num+1):nrow(bc2),]
```


```{r}
btree<-tree(Class~.,bc_train)
btree
```


#분류를 얻을때는 type=“class"를 지정해야하지만, 기본 값이 class이므로 생략 가능
```{r}
pred <- predict(btree,bc_test,type="class")
table(pred,bc_test$Class)
```

#confusionMatrix(예측값, 결과값) 함수를 이용하면 정확도 확인
```{r}
confusionMatrix(table(pred, bc_test$Class))
```






#가지치기(과적합화의 문제를 해결하기 위해 Pruning단계)
#train셋을 여러번 쪼개서 테스트 한 다음 분산이 가장 낮은 가지의 수
```{r eval=FALSE, message=FALSE, warning=FALSE, include=FALSE, paged.print=FALSE}
cv.trees<-cv.tree(btree, FUN=prune.misclass ) # for classification decision tree
plot(cv.trees)
```

#3
```{r eval=FALSE, message=FALSE, warning=FALSE, include=FALSE, paged.print=FALSE}
prune.trees <- prune.misclass(btree, best=3)  # for regression decision tree, use prune.tree function
plot(prune.trees)
```


```{r eval=FALSE, message=FALSE, warning=FALSE, include=FALSE, paged.print=FALSE}
treepred <- predict(prune.trees, bc_test, type='class')
table(treepred,bc_test$Class)
confusionMatrix(treepred, bc_test$Class)
```